// Automatically generated by MockGen. DO NOT EDIT!
// Source: state_manager.go

package mock_supervisor

import (
	gomock "github.com/innotech/hydra/vendors/code.google.com/p/gomock/gomock"

	. "github.com/innotech/hydra/supervisor"
)

// Mock of StateController interface
type MockStateController struct {
	ctrl     *gomock.Controller
	recorder *_MockStateControllerRecorder
}

// Recorder for MockStateController (not exported)
type _MockStateControllerRecorder struct {
	mock *MockStateController
}

func NewMockStateController(ctrl *gomock.Controller) *MockStateController {
	mock := &MockStateController{ctrl: ctrl}
	mock.recorder = &_MockStateControllerRecorder{mock}
	return mock
}

func (_m *MockStateController) EXPECT() *_MockStateControllerRecorder {
	return _m.recorder
}

func (_m *MockStateController) Run(ch chan StateControllerState) {
	_m.ctrl.Call(_m, "Run", ch)
}

func (_mr *_MockStateControllerRecorder) Run(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Run", arg0)
}
