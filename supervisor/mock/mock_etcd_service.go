// Automatically generated by MockGen. DO NOT EDIT!
// Source: ../etcd/etcd.go

package mock_supervisor

import (
	gomock "github.com/innotech/hydra/vendors/code.google.com/p/gomock/gomock"
)

// Mock of EtcdService interface
type MockEtcdService struct {
	ctrl     *gomock.Controller
	recorder *_MockEtcdServiceRecorder
}

// Recorder for MockEtcdService (not exported)
type _MockEtcdServiceRecorder struct {
	mock *MockEtcdService
}

func NewMockEtcdService(ctrl *gomock.Controller) *MockEtcdService {
	mock := &MockEtcdService{ctrl: ctrl}
	mock.recorder = &_MockEtcdServiceRecorder{mock}
	return mock
}

func (_m *MockEtcdService) EXPECT() *_MockEtcdServiceRecorder {
	return _m.recorder
}

func (_m *MockEtcdService) Load() {
	_m.ctrl.Call(_m, "Load")
}

func (_mr *_MockEtcdServiceRecorder) Load() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Load")
}

func (_m *MockEtcdService) Start() {
	_m.ctrl.Call(_m, "Start")
}

func (_mr *_MockEtcdServiceRecorder) Start() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Start")
}

func (_m *MockEtcdService) Stop() {
	_m.ctrl.Call(_m, "Stop")
}

func (_mr *_MockEtcdServiceRecorder) Stop() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Stop")
}
