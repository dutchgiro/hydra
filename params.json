{"name":"Hydra","tagline":"\"if a head is cut off, two more will take its place\"","body":"# What is Hydra?\r\nHydra is multi-cloud application discovery, management and balancing service.\r\n\r\nHydra attempts to ease the routing and balancing burden from servers and delegate it on the client (browser, mobile app, etc).   \r\n\r\n# Deploy\r\n\r\n## Prerequisites\r\n* build tools (gcc 4.2+, build-essential, yum groupinstall \"Development Tools\")\r\n* python 2.7+\r\n* python-devel package\r\n* pip python package manager (http://www.pip-installer.org/en/latest/installing.html)\r\n* python psutil (install via pip)\r\n* ssh\r\n* git\r\n* Increase max number of file descriptors (http://www.xenoclast.org/doc/benchmark/HTTP-benchmarking-HOWTO/node7.html)\r\n\r\n## Install nodejs\r\n* Download nodejs source code from http://nodejs.org/download/\r\nLatest build at the time of writing is 0.10.11\r\n\r\n```\r\nwget http://nodejs.org/dist/v0.10.11/node-v0.10.11.tar.gz\r\n```\r\n* Unzip\r\n\r\n```\r\ntar xvfz node-v0.10.11.tar.gz\r\n```\r\n\r\n* Compile and install\r\n\r\n```\r\ncd node-v0.10.11\r\n./configure\r\nmake // -j<num cores + 1> for faster compiling\r\nmake install // as superuser\r\n```\r\n\r\n## Install mongodb\r\nFollow this instructions: \r\n* Ubuntu - http://docs.mongodb.org/manual/tutorial/install-mongodb-on-ubuntu/\r\n* CentOS/Fedora - http://docs.mongodb.org/manual/tutorial/install-mongodb-on-red-hat-centos-or-fedora-linux/\r\n\r\n## Get Hydra source code\r\n\r\n```\r\ngit clone https://github.com/bbva-innotech/hydra.git\r\n```\r\n\r\n## Install dependancies\r\n```\r\ncd hydra/src/lib/\r\nnpm install\r\n```\r\n\r\n## Configure Hydra\r\n\r\n### Configure Hydra Server\r\n\r\n#### Modify ./hydra/src/lib/config/local.json\r\n* Change url for the public url of your service, this is the url that will be used for other hydras.\r\n* Change server port, this is the base port that will be used to sync with other hydras.\r\n* Modify timeouts on app and server.\r\n* Modify mongodb configuration.\r\n* Add your own QLog credentials.\r\n\r\n#### Modify ./hydra/src/app_manager/app_manager.cfg\r\n* Modify app_id for your own app (hydra in this case).\r\n* Set the local and cloud strategies.\r\n* Modify the cloud name and cost.\r\n* Add the public and private server, the public server url is the client_api (same as in local.json), the private server is where the app_manager_info_server is listening (http://127.0.0.1:7777 for example).\r\n* Add the server_api url of an Hydra to notify (in this case could be http://localhost:7002).\r\n* NOTE: You can see more information about app_manager at https://github.com/bbva-innotech/hydra/tree/master/src/app_manager\r\n\r\n# Launching\r\n\r\nUse the command run.sh on the src folder\r\n\r\n```\r\n./run.sh <envirnoment> <client_api_port> <server_api_port> <app_manager_info_server_port>\r\n```\r\n\r\n* environment - name of the environment file to use (local)\r\n* client_api_port - port used by the client api\r\n* server_api_port - port used by the server api and syncronization\r\n* app_manager_info_server - port used by the app_manager_info_server to monitor the system\r\n\r\nAlternatively, there is an startup script that can be copied to /etc/init.d/ as superuser once configured the desired parameters:\r\n\r\n```\r\ncp hydra/src/hydra /etc/init.d/\r\n```\r\n\r\nor used as is:\r\n```\r\n./hydra start\r\n./hydra stop\r\n```\r\n\r\nUsing main ports, such as 80 or 443, requires that no other application is listening on that port and superuser rights.\r\n\r\n# Hydra Client\r\nHydra client is a js file that should be included in the web page or node project. It provides two functions:\r\n\r\n## hydra.config([<server list>], options)\r\n* [<server list>] - the initial server urls we want to use to access Hydra.\r\n* options - (optional) object containing the following fields:\r\n\t* hydraTimeOut - timeout for updating Hydra Servers. Minimum of 60 seconds\r\n\t* appTimeOut - timeout for updating an app server in the internal cache. Minimum 20 seconds\r\n\t* retryOnFail - retry timeout in case the hydra we are requesting an app or new Hydra servers fail to answer. Minimum 500ms\r\n\r\nBy default on the browser, the initial Hydra server will be the host serving the hydra.js client file, making this function call optional, although itâ€™s recommended to set up the servers.\r\nThe node client have no initial servers, throwing an exception if <code>hydra.config</code> is not call prior to <code>hydra.get</code> \r\n\r\n## hydra.get(appID, nocache, callback)\r\nThis function will call to callback(error, [servers]) function with the url of the server that provides the given appID.\r\n* appID - id of the application requested\r\n* nocache - boolean, if set to true will ask the hydra server for the application servers ignoring the internal cache.\r\n* callback(error, [servers]) - function callback that will receive the app server or an error in case the app does not exist\r\n\r\nInternally, it will ask to the first Hydra server or use the internal cache in order to get the corresponding server url for the app and then it will call to callback function. If the application exist, the servers are sent back and served through the callback function (if the application exist, but there are no servers available, it will return an empty array). If the application does not exist, the callback will receive an error and the list will be set to null.\r\n\r\nIn case an Hydra server fails to answer (when requesting an app or new Hydra servers), the client will try again (based on the retryOnFail timeout) using the next server and moving the one that failed to the end of the list until one of the Hydra servers replies.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}